" vimrc
"
" minpac {{{
packadd minpac
call minpac#init()

call minpac#add('tpope/vim-surround')
call minpac#add('k-takata/minpac', {'type':'opt'})

" deoplete and dependencies
call minpac#add('Shougo/deoplete.nvim')
call minpac#add('roxma/nvim-yarp')
call minpac#add('roxma/vim-hug-neovim-rpc')
call minpac#add('zchee/deoplete-jedi')

call minpac#add('davidhalter/jedi-vim')
call minpac#add('wokalski/autocomplete-flow')
call minpac#add('vyzyv/vimpyter')
call minpac#add('hkupty/iron.nvim')

" }}}
"
 " vim-plug {{{

 if empty(glob('~/.vim/autoload/plug.vim'))
   silent !curl -fLo ~/.vim/autoload/plug.vim --create-dirs
     \ https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim
   autocmd VimEnter * PlugInstall --sync | source $MYVIMRC
 endif

 call plug#begin('~/.vim/plugged')

" emmet
Plug 'mattn/emmet-vim'

" slime
Plug 'jpalardy/vim-slime'


" vim-commentary
Plug 'tpope/vim-commentary'

" vim-sensible
Plug 'tpope/vim-sensible'

" eunuch
Plug 'tpope/vim-eunuch'

" google codefmt
Plug 'google/vim-maktaba'
Plug 'google/vim-codefmt'
Plug 'google/vim-glaive'

" ale
Plug 'w0rp/ale'

" supertab
Plug 'ervandew/supertab'

" snippets
" Plug 'SirVer/ultisnips'

" vim/tmux navigation
Plug 'christoomey/vim-tmux-navigator'

" Syntax python 
Plug 'hdima/python-syntax'

" better indent Python
Plug 'hynek/vim-python-pep8-indent'

" colorschemes
Plug 'freeo/vim-kalisi'

" Python folding
Plug 'tmhedberg/SimpylFold'

" auto pairs
Plug 'jiangmiao/auto-pairs'

" dockerfile syntax highlighting
Plug 'docker/docker', {'rtp': '/contrib/syntax/vim/'}

call plug#end()

" }}}

" Settings {{{
"
set nocompatible

colorscheme kalisi
set background=dark

" So backspace works as expected in OSX
set backspace=2

" display line numbers
set number

" line number, column number, virtual column number, and relative position in
" status line
set ruler

" shows info about the current command, e.g. shows number of lines selected
" when using ctrl-V
set showcmd

" no more backup files (files with ~ extension)
set nobackup

" no swapfile
set noswapfile

" display unprintible characters like $ at end of line
set list

" you can have unwritten changes in a file and open a new file
set hidden

" search highlighting on by default
set hlsearch

filetype plugin indent on
syntax enable

set wildmenu
set cursorline cursorcolumn
set showmatch
set incsearch
set foldenable
set modelines=1


" }}}

" Mappings  {{{

" visual mode dot command
xnoremap . :normal .<CR>

" indent one space at a time regardless of shiftwidth
xnoremap <S-l> :s/^/ /<CR>gv
xnoremap <S-h> :s/^\s//<CR>gv

" switch behavior of j/gj and k/gk
nnoremap j gj
nnoremap k gk
nnoremap gj j
nnoremap gk k

" source the vimrc
nnoremap <leader>so :so $MYVIMRC<CR>zv

" edit my vimrc
nnoremap <leader>ev :e $MYVIMRC<CR>

" quick mapping for toggling search highlight
nnoremap <Leader>nhl :nohlsearch<CR>
nnoremap <Leader>hl :set hlsearch<CR>

" toggle fold with spacebar
nnoremap <space> za

" }}}

" FT specific settings {{{

" python {{{
" PEP8
let python_highlight_all=1
au BufNewFile,BufRead *.py
    \ set tabstop=4 |
    \ set softtabstop=4 |
    \ set shiftwidth=4 |
    \ set textwidth=79 |
    \ set expandtab |
    \ set autoindent |
    \ set fileformat=unix

au BufRead,BufNewFile *.py,*.pyw,*.c,*.h 
    \ highlight BadWhitespace ctermbg=red guibg=darkred |
    \ match BadWhitespace /\s\+$/

" }}}
"
" bash {{{
au BufNewFile,BufRead *.sh
    \ set tabstop=2 |
    \ set softtabstop=2 |
    \ set shiftwidth=2 |
    \ set textwidth=79 |
    \ set expandtab |
    \ set autoindent |
    \ set fileformat=unix

au BufRead,BufNewFile *.sh, 
    \ highlight BadWhitespace ctermbg=red guibg=darkred |
    \ match BadWhitespace /\s\+$/

" }}}
"
" yaml {{{
au BufNewFile,BufRead *.yaml,*.yml
    \ set tabstop=2 |
    \ set softtabstop=2 |
    \ set shiftwidth=2 |
    \ set textwidth=79 |
    \ set expandtab |
    \ set autoindent |
    \ set fileformat=unix
" }}}
"
" markdown {{{
au BufNewFile,BufRead *.md
    \ set tabstop=4 |
    \ set softtabstop=4 |
    \ set shiftwidth=4 |
    \ set textwidth=79 |
    \ set expandtab |
    \ set autoindent |
    \ set fileformat=unix
" }}}
"
" Dockerfile {{{
au BufNewFile,BufRead Dockerfile
    \ set tabstop=4 |
    \ set softtabstop=4 |
    \ set shiftwidth=4 |
    \ set textwidth=79 |
    \ set expandtab |
    \ set autoindent |
    \ set fileformat=unix
" }}}

" }}}

" plugin settings and mappings {{{
"
" ALE {{{

let g:ale_lint_on_enter = 0
let g:ale_lint_on_text_changed = 'never'

" }}}
" auto pairs {{{

let g:AutoPairsShortcutFastWrap = '<C-o>e'
let g:AutoPairsShortcutToggle = '<C-o>p'
let g:AutoPairsShortcutJump = '<C-o>n'
let g:AutoPairsShortcutBackInsert = '<C-o>b'

" }}}
" deoplete {{{
"
let g:deoplete#enable_at_startup = 1
let g:deoplete#sources#jedi#show_docstring = 0
let g:jedi#completions_enabled = 0
let g:deoplete#sources#jedi#server_timeout = 90


"}}}
" simplyfold {{{

let g:SimpylFold_docstring_preview = 1

"}}}
" vim-slime {{{

let g:slime_target = "tmux"
let g:slime_python_ipython = 0

"}}}
" supertab {{{

let g:SuperTabDefaultCompletionType = '<C-n>'
let g:SuperTabContextDefaultCompletionType = "<C-n>"
let g:SuperTabCrMapping = 0

"}}}

" vim:foldmethod=marker:foldlevel=0
